

package com.treksafe.treksafe.repository;

import com.treksafe.treksafe.model.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.Optional;

/**
 * Repository interface for User entities.
 * Spring Data JPA automatically provides CRUD methods (save, find, delete, etc.).
 */
@Repository
public interface UserRepository extends JpaRepository<User, Long> {

    /**
     * Finds a User by their email address.
     * The implementation is automatically generated by Spring Data JPA because of the method name.
     * @param email The email address to search for (which acts as the username).
     * @return An Optional containing the User if found, or empty otherwise.
     */
    Optional<User> findByEmail(String email);

    /**
     * This method fulfills the contract expected by UserDetailsServiceImpl.
     * Since 'username' maps to 'email' in our application, this delegates to findByEmail.
     * We define it explicitly here for clarity and compatibility.
     * @param username The username (email) provided during login.
     * @return An Optional containing the User if found, or empty otherwise.
     */
    Optional<User> findByUsername(String username);
}


